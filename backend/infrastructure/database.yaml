# Aurora Serverless v2 Database Infrastructure
# Modular template for database resources

AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Aurora Serverless v2 Database for Clinnet EMR

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name

  DBUsername:
    Type: String
    Default: admin
    Description: Database administrator username
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"

  DBPassword:
    Type: String
    NoEcho: true
    Description: Database administrator password
    MinLength: 8
    MaxLength: 41

  MinCapacity:
    Type: Number
    Default: 0.5
    Description: Minimum Aurora Serverless v2 capacity (ACU)

  MaxCapacity:
    Type: Number
    Default: 16
    Description: Maximum Aurora Serverless v2 capacity (ACU)

  VpcId:
    Type: String
    Description: VPC ID for database deployment

  PrivateSubnetIds:
    Type: CommaDelimitedList
    Description: Private subnet IDs for database deployment

  LambdaSecurityGroupId:
    Type: String
    Description: Security group ID for Lambda functions

Conditions:
  IsProduction: !Equals [!Ref Environment, prod]

Resources:
  # Database Security Group
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub Security group for Aurora Serverless v2 - ${Environment}
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref LambdaSecurityGroupId
          Description: Allow Lambda access to MySQL
      Tags:
        - Key: Name
          Value: !Sub clinnet-emr-db-sg-${Environment}
        - Key: Environment
          Value: !Ref Environment

  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub Subnet group for Aurora Serverless v2 - ${Environment}
      SubnetIds: !Ref PrivateSubnetIds
      Tags:
        - Key: Name
          Value: !Sub clinnet-emr-db-subnet-group-${Environment}
        - Key: Environment
          Value: !Ref Environment

  # Aurora Serverless v2 Cluster
  AuroraCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: !If [IsProduction, Retain, Delete]
    UpdateReplacePolicy: !If [IsProduction, Retain, Delete]
    Properties:
      DBClusterIdentifier: !Sub clinnet-emr-${Environment}
      Engine: aurora-mysql
      EngineVersion: 8.0.mysql_aurora.3.02.0
      EngineMode: provisioned
      ServerlessV2ScalingConfiguration:
        MinCapacity: !Ref MinCapacity
        MaxCapacity: !Ref MaxCapacity
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DatabaseName: clinnet_emr
      BackupRetentionPeriod: !If [IsProduction, 30, 7]
      PreferredBackupWindow: "03:00-04:00"
      PreferredMaintenanceWindow: "sun:04:00-sun:05:00"
      VpcSecurityGroupIds:
        - !Ref DatabaseSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      StorageEncrypted: true
      EnableCloudwatchLogsExports:
        - error
        - general
        - slowquery
      DeletionProtection: !If [IsProduction, true, false]
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: Clinnet-EMR

  # Aurora Serverless v2 Instance
  AuroraInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub clinnet-emr-instance-${Environment}
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: db.serverless
      Engine: aurora-mysql
      PubliclyAccessible: false
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: Clinnet-EMR

  # CloudWatch Alarms for Monitoring
  DatabaseCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub clinnet-emr-db-cpu-${Environment}
      AlarmDescription: Database CPU utilization is too high
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref AuroraCluster

  DatabaseConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub clinnet-emr-db-connections-${Environment}
      AlarmDescription: Database connection count is too high
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref AuroraCluster

Outputs:
  DatabaseEndpoint:
    Description: Aurora Serverless v2 endpoint
    Value: !GetAtt AuroraCluster.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseEndpoint

  DatabasePort:
    Description: Aurora Serverless v2 port
    Value: !GetAtt AuroraCluster.Endpoint.Port
    Export:
      Name: !Sub ${AWS::StackName}-DatabasePort

  DatabaseSecurityGroupId:
    Description: Database security group ID
    Value: !Ref DatabaseSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseSecurityGroupId

  DatabaseClusterIdentifier:
    Description: Aurora cluster identifier
    Value: !Ref AuroraCluster
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseClusterIdentifier
