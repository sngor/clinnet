/* Import Inter font for consistent typography */
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap");

/* src/index.css */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto",
    "Helvetica Neue", Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: "cv02", "cv03", "cv04", "cv11";
  font-variant-numeric: tabular-nums;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}

#root {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* src/app/App.css */
.app {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* Global Styles for Clinnet EMR */

/* Smooth scrolling for the entire app */
html {
  /* scroll-behavior and background were removed as they are now in theme.js */
}

body {
  /* background was removed as it is now in theme.js */
}

/* Modern focus styles */
*:focus-visible {
  outline: 2px solid #4361ee;
  outline-offset: 3px;
  box-shadow: 0 0 0 4px rgba(67, 97, 238, 0.2);
  border-radius: 4px;
}

/* Custom selection color */
::selection {
  background-color: rgba(67, 97, 238, 0.2);
  color: #1a1a1a;
}

/* Subtle animations for page transitions */
.page-enter {
  opacity: 0;
  transform: translateY(10px);
}

.page-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms, transform 300ms;
}

.page-exit {
  opacity: 1;
}

.page-exit-active {
  opacity: 0;
  transition: opacity 200ms;
}

/* Enhanced Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes bounce {
  0%,
  20%,
  53%,
  80%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  40%,
  43% {
    transform: translate3d(0, -8px, 0);
  }
  70% {
    transform: translate3d(0, -4px, 0);
  }
  90% {
    transform: translate3d(0, -2px, 0);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

/* Animation Classes */
.fade-in {
  animation: fadeIn 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide-in-left {
  animation: slideInLeft 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide-in-right {
  animation: slideInRight 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.scale-in {
  animation: scaleIn 0.4s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.bounce {
  animation: bounce 1s ease infinite;
}

.shimmer {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200px 100%;
  animation: shimmer 1.5s infinite;
}

/* Enhanced Hover Effects */
.hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

.hover-scale {
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-glow {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-glow:hover {
  box-shadow: 0 0 20px rgba(67, 97, 238, 0.3);
}

.hover-rotate {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-rotate:hover {
  transform: rotate(5deg);
}

/* Responsive utilities */
/*
  Note: For Material-UI projects, using the `sx` prop for responsive display
  (e.g., `sx={{ display: { xs: 'none', sm: 'block' } }}`) is generally preferred
  over global CSS classes for better maintainability and direct component control.
  These classes are provided for broader HTML element styling if needed.

  Theme Breakpoints (from theme.js for reference):
  xs: 0
  sm: 600px
  md: 960px
  lg: 1280px
  xl: 1536px
*/

/* Hide BELOW a breakpoint (element is hidden on smaller screens, visible on breakpoint and up) */
.hide-below-sm {
  /* Hidden on xs */
  display: none !important;
}
@media (min-width: 600px) {
  /* sm */
  .hide-below-sm {
    display: initial !important;
  }
}

.hide-below-md {
  /* Hidden on xs, sm */
  display: none !important;
}
@media (min-width: 960px) {
  /* md */
  .hide-below-md {
    display: initial !important;
  }
}

.hide-below-lg {
  /* Hidden on xs, sm, md */
  display: none !important;
}
@media (min-width: 1280px) {
  /* lg */
  .hide-below-lg {
    display: initial !important;
  }
}

.hide-below-xl {
  /* Hidden on xs, sm, md, lg */
  display: none !important;
}
@media (min-width: 1536px) {
  /* xl */
  .hide-below-xl {
    display: initial !important;
  }
}

/* Show ONLY on a specific breakpoint range */
/* Show only on xs (0px - 599.95px) */
.show-only-xs {
  display: none !important;
}
@media (max-width: 599.95px) {
  /* down('sm') */
  .show-only-xs {
    display: initial !important;
  }
}

/* Show only on sm (600px - 959.95px) */
.show-only-sm {
  display: none !important;
}
@media (min-width: 600px) and (max-width: 959.95px) {
  /* between('sm', 'md') */
  .show-only-sm {
    display: initial !important;
  }
}

/* Show only on md (960px - 1279.95px) */
.show-only-md {
  display: none !important;
}
@media (min-width: 960px) and (max-width: 1279.95px) {
  /* between('md', 'lg') */
  .show-only-md {
    display: initial !important;
  }
}

/* Show only on lg (1280px - 1535.95px) */
.show-only-lg {
  display: none !important;
}
@media (min-width: 1280px) and (max-width: 1535.95px) {
  /* between('lg', 'xl') */
  .show-only-lg {
    display: initial !important;
  }
}

/* Show only on xl (1536px and up) */
.show-only-xl {
  display: none !important;
}
@media (min-width: 1536px) {
  /* up('xl') */
  .show-only-xl {
    display: initial !important;
  }
}

/* Hide ABOVE a breakpoint (element is visible on smaller screens, hidden on breakpoint and up) */
/* Useful for elements that should only appear on mobile/tablet */
.hide-above-xs {
  /* Hidden on sm, md, lg, xl. Visible only on xs */
  display: initial !important;
}
@media (min-width: 600px) {
  /* sm */
  .hide-above-xs {
    display: none !important;
  }
}

.hide-above-sm {
  /* Hidden on md, lg, xl. Visible on xs, sm */
  display: initial !important;
}
@media (min-width: 960px) {
  /* md */
  .hide-above-sm {
    display: none !important;
  }
}

.hide-above-md {
  /* Hidden on lg, xl. Visible on xs, sm, md */
  display: initial !important;
}
@media (min-width: 1280px) {
  /* lg */
  .hide-above-md {
    display: none !important;
  }
}

.hide-above-lg {
  /* Hidden on xl. Visible on xs, sm, md, lg */
  display: initial !important;
}
@media (min-width: 1536px) {
  /* xl */
  .hide-above-lg {
    display: none !important;
  }
}

/* Responsive spacing helpers - these are kept as they are, using fixed steps */
/* They can be useful for quick, consistent spacing adjustments */
.responsive-mt {
  margin-top: 16px;
}

.responsive-mb {
  margin-bottom: 16px;
}

.responsive-padding {
  padding: 16px;
}

@media (min-width: 600px) {
  .responsive-mt {
    margin-top: 24px;
  }

  .responsive-mb {
    margin-bottom: 24px;
  }

  .responsive-padding {
    padding: 24px;
  }
}

@media (min-width: 960px) {
  .responsive-mt {
    margin-top: 32px;
  }

  .responsive-mb {
    margin-bottom: 32px;
  }

  .responsive-padding {
    padding: 32px;
  }
}

/* Enhanced input autofill styles */
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0 30px white inset !important;
  -webkit-text-fill-color: #1a1a1a !important;
  transition: background-color 5000s ease-in-out 0s;
}

/* Soft box shadows */
.soft-shadow {
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
}

/* Glass effect for certain components */
.glass-effect {
  background: var(--glass-bg, rgba(255, 255, 255, 0.7));
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border, rgba(255, 255, 255, 0.2));
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.05);
}

/* Gradient backgrounds */
.gradient-primary {
  background: linear-gradient(135deg, #4361ee 0%, #3a56d4 100%);
}

.gradient-secondary {
  background: linear-gradient(135deg, #7209b7 0%, #560a86 100%);
}

.gradient-success {
  background: linear-gradient(135deg, #06d6a0 0%, #00a87a 100%);
}

/* Text gradient effects */
.text-gradient {
  background: linear-gradient(90deg, #4361ee, #7209b7);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  color: transparent; /* Fallback */
}

/* Theme mode indicators */
body[data-theme-mode="auto"] {
  --theme-indicator: "üîÑ";
}

body[data-theme-mode="light"] {
  --theme-indicator: "‚òÄÔ∏è";
}

body[data-theme-mode="dark"] {
  --theme-indicator: "üåô";
}

/* Sticky page header utility class */
.sticky-page-header {
  position: sticky;
  top: 0;
  z-index: 1101;
  background: var(--header-bg, rgba(255, 255, 255, 0.85));
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  box-shadow: 0 2px 8px rgba(67, 97, 238, 0.04);
  padding-left: 72px; /* space for menu icon */
  min-height: 56px;
}
